services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        - PYTHON_VERSION=3.12
    image: ghcr.io/seudsahm2/wedding-dream-backend:latest
    environment:
      - DJANGO_SETTINGS_MODULE=wedding_dream.settings.prod
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - CACHE_REDIS_URL=${CACHE_REDIS_URL:-redis://redis:6379/1}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/2}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://redis:6379/3}
      - DATABASE_URL=${DATABASE_URL}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/api/v1/health/ >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s
    depends_on:
      - redis
    restart: unless-stopped

  worker:
    image: ghcr.io/seudsahm2/wedding-dream-backend:latest
    environment:
      - DJANGO_SETTINGS_MODULE=wedding_dream.settings.prod
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/2}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://redis:6379/3}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - redis
    command: ["celery", "-A", "wedding_dream", "worker", "-l", "info"]
    restart: unless-stopped

  beat:
    image: ghcr.io/seudsahm2/wedding-dream-backend:latest
    environment:
      - DJANGO_SETTINGS_MODULE=wedding_dream.settings.prod
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://redis:6379/2}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://redis:6379/3}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - redis
    command: ["celery", "-A", "wedding_dream", "beat", "-l", "info"]
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s

